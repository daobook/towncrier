# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Amber Brown
# This file is distributed under the same license as the Towncrier package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Towncrier 17.08\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-31 14:11+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/configuration.rst:2
msgid "Configuration Reference"
msgstr ""

#: ../../docs/configuration.rst:4
msgid ""
"``towncrier`` has many knobs and switches you can use, to customise it to"
" your project's needs. The setup in the `Quick Start <quickstart.html>`_ "
"doesn't touch on many, but this document will detail each of these "
"options for you!"
msgstr ""

#: ../../docs/configuration.rst:7
msgid ""
"For how to perform common customisation tasks, see `Customisation "
"<customisation/index.html>`_."
msgstr ""

#: ../../docs/configuration.rst:10
msgid "``[tool.towncrier]``"
msgstr ""

#: ../../docs/configuration.rst:12
msgid ""
"All configuration for ``towncrier`` sits inside ``pyproject.toml``, under"
" the ``tool.towncrier`` namespace. Please see `the TOML GitHub repo "
"<https://github.com/toml-lang/toml>`_ for how to write TOML."
msgstr ""

#: ../../docs/configuration.rst:16
msgid "Top level keys"
msgstr ""

#: ../../docs/configuration.rst:18
msgid "``package`` -- The package name of your project. (Python projects only)"
msgstr ""

#: ../../docs/configuration.rst:19
msgid ""
"``package_dir`` -- The folder your package lives. ``./`` by default, some"
" projects might need to use ``src``. (Python projects only)"
msgstr ""

#: ../../docs/configuration.rst:20
msgid "``newsfile`` -- The filename of your news file. ``NEWS.rst`` by default."
msgstr ""

#: ../../docs/configuration.rst:21
msgid ""
"``fragment_directory`` -- If you are not storing your newsfragments in "
"your Python package, or aren't using Python, this is the path to where "
"your newsfragments will be put."
msgstr ""

#: ../../docs/configuration.rst:22
msgid ""
"``template`` -- Path to an alternate template for generating the "
"newsfile, if you have one."
msgstr ""

#: ../../docs/configuration.rst:23
msgid ""
"``start_line`` -- The magic string that ``towncrier`` looks for when "
"considering where the release notes should start. ``.. towncrier release "
"notes start`` by default."
msgstr ""

#: ../../docs/configuration.rst:24
msgid ""
"``title_format`` -- A format string for the title of your project. "
"``{name} {version} ({project_date})`` by default."
msgstr ""

#: ../../docs/configuration.rst:25
msgid ""
"``issue_format`` -- A format string for rendering the issue/ticket number"
" in newsfiles. ``#{issue}`` by default."
msgstr ""

#: ../../docs/configuration.rst:26
msgid ""
"``underlines`` -- The characters used for underlining headers. ``[\"=\", "
"\"-\", \"~\"]`` by default."
msgstr ""

#: ../../docs/configuration.rst:29
msgid "Custom fragment types"
msgstr ""

#: ../../docs/configuration.rst:30
msgid ""
"``Towncrier`` allows defining custom fragment types. Custom fragment "
"types will be used instead ``towncrier`` default ones, they are not "
"combined."
msgstr ""

#: ../../docs/configuration.rst:33
msgid ""
"Users can configure each of their own custom fragment types by adding "
"tables to the pyproject.toml named ``[tool.towncrier.type.<a custom "
"fragment type>]``."
msgstr ""

#: ../../docs/configuration.rst:36
msgid "These tables may include the following optional keys:"
msgstr ""

#: ../../docs/configuration.rst:38
msgid ""
"``name``: The description of the fragment type, as it must be included in"
" the news file. If omitted, it defaults to  its  fragment type, but "
"capitalized."
msgstr ""

#: ../../docs/configuration.rst:41
msgid ""
"``showcontent``: Whether if the fragment contents should be included in "
"the news file. If omitted, it defaults to ``true``"
msgstr ""

#: ../../docs/configuration.rst:46
msgid ""
"For example, if you want your custom fragment types to be ``[\"feat\", "
"\"fix\", \"chore\",]`` and you want all of them to use the default "
"configuration except ``\"chore\"`` you can do it as follows:"
msgstr ""

#: ../../docs/configuration.rst:66
msgid "DEPRECATED: Defining custom fragment types with an array of toml tables"
msgstr ""

#: ../../docs/configuration.rst:67
msgid ""
"Users can create their own custom fragment types by adding an array of "
"tables to the pyproject.toml named ``[[tool.towncrier.type]]``."
msgstr ""

#: ../../docs/configuration.rst:70
msgid ""
"If still using this way to configure custom fragment types, please notice"
" that ``fragment_types`` must be empty or not provided."
msgstr ""

#: ../../docs/configuration.rst:73
msgid ""
"Each custom type (``[[tool.towncrier.type]]``) has the following "
"mandatory keys:"
msgstr ""

#: ../../docs/configuration.rst:75
msgid "``directory``: The type of the fragment."
msgstr ""

#: ../../docs/configuration.rst:76
msgid ""
"``name``: The description of the fragment type, as it must be included in"
" the news file."
msgstr ""

#: ../../docs/configuration.rst:78
msgid ""
"``showcontent``: Whether if the fragment contents should be included in "
"the news file."
msgstr ""

#: ../../docs/configuration.rst:83
msgid "For example:"
msgstr ""

